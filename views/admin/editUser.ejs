<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="keywords" content="edit user, user management, customer management, admin tools, user profile editing" />
    <meta name="description" content="Edit user profiles and manage customer accounts in Aloura admin panel. Comprehensive user management for fragrance e-commerce." />
    <title>Edit User Profile - Customer Management | Aloura Admin</title>
    <meta name="robots" content="noindex, nofollow" />

    <link
      rel="icon"
      type="image/x-icon"
      href="../img/favicons/rounded-background-favicon.ico"
    />
    <link rel="stylesheet" href="/css/page-loader.css" />

    <!-- Bootstrap -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />

    <!-- Toastify -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <style>
      /* Base styles */
      body {
        background-color: whitesmoke;
        color: #000000;
        font-family: "Arial", sans-serif;
        opacity: 0;
        animation: fadeIn 0.5s ease-in forwards;
        padding: 2rem;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      /* Form container */
      .form-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0;
      }

      /* Typography */
      .title-container {
        text-align: center;
        margin-bottom: 2.5rem;
        position: relative;
      }

      h2 {
        font-size: 2.5rem;
        font-weight: 700;
        color: #121212;
        display: inline-block;
        margin-left: 20px;
        position: relative;
        cursor: pointer;
      }

      h2::after {
        content: "";
        position: absolute;
        width: 0;
        height: 2px;
        bottom: -5px;
        left: 0;
        background-color: #121212;
        transition: width 0.3s ease;
      }

      h2:hover::after {
        width: 100%;
      }

      .form-label {
        font-weight: 500;
        color: #121212;
        margin-bottom: 0.5rem;
        font-size: 1.1rem;
      }

      /* Form controls */
      .form-control,
      .form-select {
        background-color: #ffffff;
        color: #121212;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 0.75rem 1rem;
        transition: all 0.3s ease;
      }

      .form-control:focus,
      .form-select:focus {
        border-color: #121212;
        box-shadow: 0 0 0 0.2rem rgba(18, 18, 18, 0.15);
        outline: none;
      }

      /* Profile picture section */
      .profile-picture-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        margin-bottom: 2rem;
      }

      .profile-picture-wrapper {
        position: relative;
        width: 150px;
        height: 150px;
        border: 2px solid #e0e0e0;
        border-radius: 50%;
        overflow: hidden;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .profile-picture-wrapper:hover {
        border-color: #121212;
      }

      .profile-picture-preview {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .button-group {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        width: 100%;
        max-width: 300px;
      }

      /* Submit button */
      .submit-button-container {
        text-align: start;
        margin-top: 2rem;
      }

      .ButtonDicoration {
        color: white !important;
        background-color: #121212 !important;
        border: 1px solid #121212 !important;
        padding: 0.5rem 1rem;
        border-radius: 8px;
        font-weight: 500;
        transition: all 0.3s ease;
        flex: 1;
      }

      .ButtonDicoration:hover {
        color: #121212 !important;
        background-color: white !important;
      }

      /* Form sections */
      .form-section {
        margin-bottom: 2rem;
        padding: 1rem;
        border-bottom: 1px solid #e0e0e0;
      }

      .form-section:last-child {
        border-bottom: none;
      }

      /* Grid layout */
      .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
      }

      /* Responsive adjustments */
      @media (max-width: 768px) {
        body {
          padding: 1rem;
        }

        .button-group {
          flex-direction: column;
          width: 100%;
        }

        .ButtonDicoration {
          width: 100%;
        }

        .form-grid {
          grid-template-columns: 1fr;
        }
      }

      /* Animation classes */
      .fade-in {
        animation: fadeIn 0.5s ease-in;
      }
    </style>
  </head>
  <body>
    <div class="container fade-in">
      <div class="form-container">
        <div class="d-flex align-items-center mb-4">
          <a href="/admin/<%= user._id %>" class="btn btn-link text-dark p-0 me-3 ms-3" style="font-size: 1.5rem;">
            <i class="fas fa-arrow-left"></i>
          </a>
          <h2 class="mb-0">Edit User</h2>
        </div>
        <form id="editUserForm">
          <div class="form-section">
            <div class="form-grid">
              <div class="mb-4">
                <label class="form-label">User ID</label>
                <p id="user-id" class="form-control"><%= user._id %></p>
              </div>
            </div>

            <div class="profile-picture-container">
              <label class="form-label">Profile Picture</label>
              <div class="profile-picture-wrapper" onclick="document.getElementById('profile-picture').click()">
                <img
                  id="profile-picture-preview"
                  src="<%= user.profilePic %>"
                  alt="Profile Preview"
                  class="profile-picture-preview"
                />
              </div>
              <div class="button-group">
                <input
                  type="file"
                  class="d-none"
                  id="profile-picture"
                  name="profilePicture"
                  accept="image/*"
                />
                <button
                  type="button"
                  class="btn btn-outline-primary ButtonDicoration"
                  onclick="document.getElementById('profile-picture').click()"
                >
                  Upload Picture
                </button>
                <button
                  type="button"
                  class="btn btn-outline-primary ButtonDicoration"
                  id="reset-profile-picture"
                >
                  Default Picture
                </button>
              </div>
            </div>

            <div class="form-grid">
              <div class="mb-4">
                <label class="form-label">Full Name</label>
                <input
                  type="text"
                  class="form-control"
                  id="user-name"
                  value="<%= user.name %>"
                  name="name"
                />
              </div>

              <div class="mb-4">
                <label class="form-label">Email address</label>
                <input
                  type="text"
                  class="form-control"
                  id="user-email"
                  value="<%= user.email %>"
                  name="email"
                />
              </div>
            </div>

            <div class="form-grid">
              <div class="mb-4">
                <label class="form-label">Old Password</label>
                <div class="input-group">
                  <input
                    name="password"
                    type="password"
                    class="form-control"
                    id="userOldPassword"
                    placeholder="Enter Old password"
                  />
                  <span
                    class="input-group-text password-toggle"
                    id="userOldPasswordToggle"
                    style="cursor: pointer;"
                  >
                    <i class="fa-solid fa-lock" id="userOldPasswordIcon"></i>
                  </span>
                </div>
              </div>

              <div class="mb-4">
                <label class="form-label">New Password</label>
                <div class="input-group">
                  <input
                    name="Confirm Password"
                    type="password"
                    class="form-control"
                    id="userNewPassword"
                    placeholder="Enter New password"
                  />
                  <span
                    class="input-group-text password-toggle"
                    id="userNewPassword"
                    style="cursor: pointer;"
                  >
                    <i class="fa-solid fa-lock" id="userNewPasswordIcon"></i>
                  </span>
                </div>
              </div>
            </div>

            <div class="form-grid">
              <div class="mb-4">
                <label class="form-label">Phone Number</label>
                <div class="input-group">
                  <span class="input-group-text">+20</span>
                  <input
                    type="tel"
                    name="tel"
                    class="form-control"
                    value="<%= user.phone %>"
                    maxlength="10"
                    id="user-phone"
                    pattern="\d{10}"
                    inputmode="numeric"
                    oninput="this.value = this.value.replace(/\D/g, '')"
                  />
                </div>
              </div>

              <% if (user.role) { %>
              <div class="mb-4">
                <label class="form-label">Role</label>
                <select id="user-role" class="form-select">
                  <option value="user" <%= user.role === 'user' ? 'selected' : '' %>>User</option>
                  <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Admin</option>
                </select>
              </div>
              <% } %>
            </div>

            <% if (user.isVerified !== undefined) { %>
            <div class="form-grid">
              <div class="mb-4">
                <label class="form-label">Verified</label>
                <select id="user-isVerified" class="form-select">
                  <option value="true" <%= user.isVerified === true ? 'selected' : '' %>>True</option>
                  <option value="false" <%= user.isVerified === false ? 'selected' : '' %>>False</option>
                </select>
              </div>
              <div class="mb-4">
                <label class="form-label">Subscriber List</label>
                <select id="user-subscriberList" class="form-select">
                  <option value="true" <%= user.subscriberList  === true ? 'selected' : '' %>>Subscribed</option>
                  <option value="false" <%= user.subscriberList  === false ? 'selected' : '' %>>Not Subscribed</option>
                </select>
              </div>
            </div>
            <% } %>
          </div>

          <div class="submit-button-container">
            <button type="submit" class="btn btn-primary ButtonDicoration">
              Edit User
            </button>
          </div>
        </form>
      </div>
    </div>

    <script type="module">
      import showFunToast from "/js/toast.js";

      document.addEventListener("DOMContentLoaded", function () {
        // DOM Elements
        const fileInput = document.getElementById("profile-picture");
        const preview = document.getElementById("profile-picture-preview");
        const resetButton = document.getElementById("reset-profile-picture");
        const form = document.getElementById("editUserForm");

        // Constants
        const DEFAULT_PIC_PATH = "/uploads/defaultProfilePic.png";
        let isDefaultPicture = false;

        // Save the initial values when the page loads
        const originalValues = {
          id: document.getElementById("user-id").textContent.trim(),
          name: document.getElementById("user-name").value,
          email: document.getElementById("user-email").value,
          phone: document.getElementById("user-phone")?.value || "",
          role: document.getElementById("user-role")?.value || "",
          isVerified: document.getElementById("user-isVerified")?.value || "",
          subscriberList: document.getElementById("user-subscriberList")?.value || "",
          oldPassword: document.getElementById("userOldPassword")?.value || "",
          newPassword: document.getElementById("userNewPassword")?.value || "",
          profilePicture: document.getElementById("profile-picture-preview").getAttribute('src'),
        };

        // Event Listeners
        fileInput.addEventListener("change", function (event) {
          const file = event.target.files[0];
          if (file) {
            preview.src = URL.createObjectURL(file);
          }
        });

        resetButton.addEventListener("click", function () {
          preview.src = DEFAULT_PIC_PATH;
          fileInput.value = "";
          isDefaultPicture = true;
        });

        form.addEventListener("submit", async (e) => {
          e.preventDefault();

          // Get form values
          const id = document.getElementById("user-id").textContent.trim();
          const name = document.getElementById("user-name").value;
          const email = document.getElementById("user-email").value;
          const phone = document.getElementById("user-phone")?.value || "";
          const role = document.getElementById("user-role")?.value || "";
          const isVerified = document.getElementById("user-isVerified")?.value || "";
          const subscriberList  = document.getElementById("user-subscriberList")?.value || "";
          const oldpassword = document.getElementById("userOldPassword")?.value.trim() || "";
          const newpassword = document.getElementById("userNewPassword")?.value.trim() || "";
          const profilePicture = fileInput.files[0];
          const currentPicture = document.getElementById("profile-picture-preview").getAttribute('src');

          // Check if anything has changed
          const hasChanged =
            name !== originalValues.name ||
            email !== originalValues.email ||
            phone !== originalValues.phone ||
            role !== originalValues.role ||
            isVerified !== originalValues.isVerified ||
            subscriberList  !== originalValues.subscriberList  ||
            oldpassword !== "" ||
            newpassword !== "" ||
            currentPicture !== originalValues.profilePicture;

          if (!hasChanged) {
            showFunToast("ℹ️ No changes detected.", "red");
            return;
          }

          // Prepare form data
          const formData = new FormData();
          formData.append("email", email);
          formData.append("phone", phone);
          formData.append("name", name);
          formData.append("role", role);
          formData.append("isVerified", isVerified);
          formData.append("subscriberList", subscriberList);

          // Handle profile picture
          if (profilePicture) {
            formData.append("profilePicture", profilePicture);
          } else if (isDefaultPicture) {
            formData.append("profilePicture", DEFAULT_PIC_PATH);
          }

          // Handle password changes
          if (oldpassword && newpassword) {
            formData.append("oldpassword", oldpassword);
            formData.append("newpassword", newpassword);
          } else if (oldpassword || newpassword) {
            showFunToast("⚠️ Fill BOTH old and new passwords!", "red");
            return;
          }

          try {
            // Send update request
            const response = await fetch(`/api/users/${id}`, {
              method: "PUT",
              body: formData,
            });

            const data = await response.json();

            if (response.ok) {
              setTimeout(() => {
                showFunToast(data.message || "✅ Updated successfully!", "green");
                window.location.href = `/admin/${id}`;
              }, 1500);
            } else {
              showFunToast(data.message || "❌ Error occurred!", "red");
            }
          } catch (err) {
            console.error(err);
            showFunToast("❌ Error occurred!", "red");
          }
        });

        // Password toggle functionality
        const setupPasswordToggle = (inputId, iconId) => {
          const input = document.getElementById(inputId);
          const icon = document.getElementById(iconId);

          if (!input || !icon) return;

          icon.parentElement.addEventListener("click", () => {
            const isPassword = input.type === "password";
            input.type = isPassword ? "text" : "password";
            icon.classList.toggle("fa-lock", !isPassword);
            icon.classList.toggle("fa-lock-open", isPassword);
          });
        };

        // Initialize password toggles
        setupPasswordToggle("userOldPassword", "userOldPasswordIcon");
        setupPasswordToggle("userNewPassword", "userNewPasswordIcon");
      });
    </script>
  </body>
</html>
